// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sentinel/session/v3/msg.proto

package v3

import (
	context "context"
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	v2 "github.com/sentinel-official/hub/v12/x/session/types/v2"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/types/known/durationpb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCancelSessionRequest struct {
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	ID   uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCancelSessionRequest) Reset()         { *m = MsgCancelSessionRequest{} }
func (m *MsgCancelSessionRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCancelSessionRequest) ProtoMessage()    {}
func (*MsgCancelSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_500a511d35bc0487, []int{0}
}
func (m *MsgCancelSessionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelSessionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelSessionRequest.Merge(m, src)
}
func (m *MsgCancelSessionRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelSessionRequest proto.InternalMessageInfo

type MsgUpdateSessionRequest struct {
	From          string                `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	ID            uint64                `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	DownloadBytes cosmossdk_io_math.Int `protobuf:"bytes,3,opt,name=download_bytes,json=downloadBytes,proto3,customtype=cosmossdk.io/math.Int" json:"download_bytes"`
	UploadBytes   cosmossdk_io_math.Int `protobuf:"bytes,4,opt,name=upload_bytes,json=uploadBytes,proto3,customtype=cosmossdk.io/math.Int" json:"upload_bytes"`
	Duration      time.Duration         `protobuf:"bytes,5,opt,name=duration,proto3,stdduration" json:"duration"`
	Signature     []byte                `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *MsgUpdateSessionRequest) Reset()         { *m = MsgUpdateSessionRequest{} }
func (m *MsgUpdateSessionRequest) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSessionRequest) ProtoMessage()    {}
func (*MsgUpdateSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_500a511d35bc0487, []int{1}
}
func (m *MsgUpdateSessionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSessionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSessionRequest.Merge(m, src)
}
func (m *MsgUpdateSessionRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSessionRequest proto.InternalMessageInfo

type MsgUpdateParamsRequest struct {
	From   string    `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Params v2.Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParamsRequest) Reset()         { *m = MsgUpdateParamsRequest{} }
func (m *MsgUpdateParamsRequest) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsRequest) ProtoMessage()    {}
func (*MsgUpdateParamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_500a511d35bc0487, []int{2}
}
func (m *MsgUpdateParamsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsRequest.Merge(m, src)
}
func (m *MsgUpdateParamsRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsRequest proto.InternalMessageInfo

type MsgCancelSessionResponse struct {
}

func (m *MsgCancelSessionResponse) Reset()         { *m = MsgCancelSessionResponse{} }
func (m *MsgCancelSessionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCancelSessionResponse) ProtoMessage()    {}
func (*MsgCancelSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_500a511d35bc0487, []int{3}
}
func (m *MsgCancelSessionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelSessionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelSessionResponse.Merge(m, src)
}
func (m *MsgCancelSessionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelSessionResponse proto.InternalMessageInfo

type MsgUpdateSessionResponse struct {
}

func (m *MsgUpdateSessionResponse) Reset()         { *m = MsgUpdateSessionResponse{} }
func (m *MsgUpdateSessionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSessionResponse) ProtoMessage()    {}
func (*MsgUpdateSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_500a511d35bc0487, []int{4}
}
func (m *MsgUpdateSessionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSessionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSessionResponse.Merge(m, src)
}
func (m *MsgUpdateSessionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSessionResponse proto.InternalMessageInfo

type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_500a511d35bc0487, []int{5}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCancelSessionRequest)(nil), "sentinel.session.v3.MsgCancelSessionRequest")
	proto.RegisterType((*MsgUpdateSessionRequest)(nil), "sentinel.session.v3.MsgUpdateSessionRequest")
	proto.RegisterType((*MsgUpdateParamsRequest)(nil), "sentinel.session.v3.MsgUpdateParamsRequest")
	proto.RegisterType((*MsgCancelSessionResponse)(nil), "sentinel.session.v3.MsgCancelSessionResponse")
	proto.RegisterType((*MsgUpdateSessionResponse)(nil), "sentinel.session.v3.MsgUpdateSessionResponse")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "sentinel.session.v3.MsgUpdateParamsResponse")
}

func init() { proto.RegisterFile("sentinel/session/v3/msg.proto", fileDescriptor_500a511d35bc0487) }

var fileDescriptor_500a511d35bc0487 = []byte{
	// 525 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xcd, 0x6e, 0xd3, 0x40,
	0x18, 0xb4, 0x4d, 0x88, 0xda, 0x6d, 0xf9, 0xd1, 0x02, 0xc5, 0x0d, 0xd4, 0x89, 0x72, 0x8a, 0x44,
	0xbb, 0x2b, 0x9c, 0x03, 0xe2, 0x04, 0x32, 0xe1, 0xd0, 0x43, 0x25, 0xe4, 0x8a, 0x03, 0x5c, 0x90,
	0x13, 0x6f, 0x36, 0x2b, 0x6c, 0xaf, 0xf1, 0xae, 0x03, 0x7d, 0x0b, 0x8e, 0x3c, 0x02, 0x07, 0x1e,
	0x24, 0xc7, 0x1e, 0x11, 0x42, 0x01, 0x9c, 0x17, 0x41, 0xf6, 0xda, 0xa1, 0xcd, 0x4f, 0x15, 0x71,
	0xdb, 0x64, 0xbe, 0x99, 0xf9, 0x34, 0xf3, 0x19, 0x1c, 0x08, 0x12, 0x49, 0x16, 0x91, 0x00, 0x0b,
	0x22, 0x04, 0xe3, 0x11, 0x1e, 0x77, 0x71, 0x28, 0x28, 0x8a, 0x13, 0x2e, 0x39, 0xbc, 0x53, 0xc1,
	0xa8, 0x84, 0xd1, 0xb8, 0xdb, 0xb8, 0x4b, 0x39, 0xe5, 0x05, 0x8e, 0xf3, 0x97, 0x1a, 0x6d, 0x58,
	0x94, 0x73, 0x1a, 0x10, 0x5c, 0xfc, 0xea, 0xa7, 0x43, 0xec, 0xa7, 0x89, 0x27, 0x73, 0x8a, 0xc2,
	0x5b, 0xcb, 0x4e, 0x36, 0x8e, 0xbd, 0xc4, 0x0b, 0x85, 0x9a, 0x68, 0xbf, 0x04, 0xf7, 0x4f, 0x04,
	0x7d, 0xe1, 0x45, 0x03, 0x12, 0x9c, 0xaa, 0x19, 0x97, 0x7c, 0x48, 0x89, 0x90, 0x10, 0x82, 0xda,
	0x30, 0xe1, 0xa1, 0xa9, 0xb7, 0xf4, 0xce, 0xb6, 0x5b, 0xbc, 0xe1, 0x1e, 0x30, 0x98, 0x6f, 0x1a,
	0x2d, 0xbd, 0x53, 0x73, 0xea, 0xd9, 0xb4, 0x69, 0x1c, 0xf7, 0x5c, 0x83, 0xf9, 0xed, 0x6f, 0x46,
	0xa1, 0xf3, 0x3a, 0xf6, 0x3d, 0x49, 0xfe, 0x5f, 0x07, 0xf6, 0xc0, 0x4d, 0x9f, 0x7f, 0x8c, 0x02,
	0xee, 0xf9, 0xef, 0xfa, 0x67, 0x92, 0x08, 0xf3, 0x5a, 0xce, 0x72, 0x0e, 0x26, 0xd3, 0xa6, 0xf6,
	0x63, 0xda, 0xbc, 0x37, 0xe0, 0x22, 0xe4, 0x42, 0xf8, 0xef, 0x11, 0xe3, 0x38, 0xf4, 0xe4, 0x08,
	0x1d, 0x47, 0xd2, 0xbd, 0x51, 0x91, 0x9c, 0x9c, 0x03, 0x9f, 0x83, 0xdd, 0x34, 0xbe, 0xa0, 0x51,
	0xdb, 0x44, 0x63, 0x47, 0x51, 0x94, 0xc2, 0x33, 0xb0, 0x55, 0x45, 0x69, 0x5e, 0x6f, 0xe9, 0x9d,
	0x1d, 0x7b, 0x1f, 0xa9, 0xac, 0x51, 0x95, 0x35, 0xea, 0x95, 0x03, 0xce, 0x56, 0x2e, 0xfc, 0xe5,
	0x57, 0x53, 0x77, 0xe7, 0x24, 0xf8, 0x10, 0x6c, 0x0b, 0x46, 0x23, 0x4f, 0xa6, 0x09, 0x31, 0xeb,
	0x2d, 0xbd, 0xb3, 0xeb, 0xfe, 0xfb, 0xa3, 0x4d, 0xc1, 0xde, 0x3c, 0xad, 0x57, 0x45, 0x1d, 0x57,
	0x85, 0xf5, 0x14, 0xd4, 0x55, 0x67, 0x45, 0x60, 0x3b, 0xf6, 0x03, 0xb4, 0x7c, 0x21, 0x36, 0x52,
	0x3a, 0x4e, 0x2d, 0x5f, 0xc6, 0x2d, 0x09, 0xed, 0x06, 0x30, 0x97, 0xeb, 0x15, 0x31, 0x8f, 0x04,
	0x29, 0xb1, 0x85, 0xca, 0x4a, 0x6c, 0xff, 0x42, 0x9d, 0xd5, 0x82, 0x0a, 0xb2, 0x7f, 0x1a, 0x00,
	0x9c, 0x08, 0x7a, 0x4a, 0x92, 0x31, 0x1b, 0x10, 0xc8, 0xc1, 0xed, 0x45, 0x07, 0x78, 0xb8, 0x62,
	0xc1, 0x2e, 0x5a, 0x73, 0x67, 0x8d, 0xa3, 0x0d, 0xa7, 0x95, 0x7f, 0x69, 0x78, 0x69, 0xed, 0xf5,
	0x86, 0xab, 0x0e, 0x72, 0xbd, 0xe1, 0xca, 0x2c, 0x60, 0x00, 0x6e, 0x2d, 0x64, 0x01, 0x1f, 0x5d,
	0xad, 0x70, 0xa9, 0xd2, 0xc6, 0xe1, 0x66, 0xc3, 0xca, 0xcd, 0x79, 0x33, 0xf9, 0x63, 0x69, 0x5f,
	0x33, 0x4b, 0x9b, 0x64, 0x96, 0x7e, 0x9e, 0x59, 0xfa, 0xef, 0xcc, 0xd2, 0x3f, 0xcf, 0x2c, 0xed,
	0x7c, 0x66, 0x69, 0xdf, 0x67, 0x96, 0xf6, 0xf6, 0x09, 0x65, 0x72, 0x94, 0xf6, 0xd1, 0x80, 0x87,
	0xb8, 0x52, 0x3e, 0xe2, 0xc3, 0x21, 0x1b, 0x30, 0x2f, 0xc0, 0xa3, 0xb4, 0x8f, 0xc7, 0x8f, 0x6d,
	0xfc, 0x69, 0xfe, 0xc9, 0xcb, 0xb3, 0x98, 0x08, 0x3c, 0xee, 0xf6, 0xeb, 0xc5, 0xe9, 0x76, 0xff,
	0x06, 0x00, 0x00, 0xff, 0xff, 0x1a, 0xcd, 0x25, 0x21, 0x80, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgServiceClient is the client API for MsgService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgServiceClient interface {
	MsgCancelSession(ctx context.Context, in *MsgCancelSessionRequest, opts ...grpc.CallOption) (*MsgCancelSessionResponse, error)
	MsgUpdateSession(ctx context.Context, in *MsgUpdateSessionRequest, opts ...grpc.CallOption) (*MsgUpdateSessionResponse, error)
	MsgUpdateParams(ctx context.Context, in *MsgUpdateParamsRequest, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
}

type msgServiceClient struct {
	cc grpc1.ClientConn
}

func NewMsgServiceClient(cc grpc1.ClientConn) MsgServiceClient {
	return &msgServiceClient{cc}
}

func (c *msgServiceClient) MsgCancelSession(ctx context.Context, in *MsgCancelSessionRequest, opts ...grpc.CallOption) (*MsgCancelSessionResponse, error) {
	out := new(MsgCancelSessionResponse)
	err := c.cc.Invoke(ctx, "/sentinel.session.v3.MsgService/MsgCancelSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgServiceClient) MsgUpdateSession(ctx context.Context, in *MsgUpdateSessionRequest, opts ...grpc.CallOption) (*MsgUpdateSessionResponse, error) {
	out := new(MsgUpdateSessionResponse)
	err := c.cc.Invoke(ctx, "/sentinel.session.v3.MsgService/MsgUpdateSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgServiceClient) MsgUpdateParams(ctx context.Context, in *MsgUpdateParamsRequest, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/sentinel.session.v3.MsgService/MsgUpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServiceServer is the server API for MsgService service.
type MsgServiceServer interface {
	MsgCancelSession(context.Context, *MsgCancelSessionRequest) (*MsgCancelSessionResponse, error)
	MsgUpdateSession(context.Context, *MsgUpdateSessionRequest) (*MsgUpdateSessionResponse, error)
	MsgUpdateParams(context.Context, *MsgUpdateParamsRequest) (*MsgUpdateParamsResponse, error)
}

// UnimplementedMsgServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServiceServer struct {
}

func (*UnimplementedMsgServiceServer) MsgCancelSession(ctx context.Context, req *MsgCancelSessionRequest) (*MsgCancelSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MsgCancelSession not implemented")
}
func (*UnimplementedMsgServiceServer) MsgUpdateSession(ctx context.Context, req *MsgUpdateSessionRequest) (*MsgUpdateSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MsgUpdateSession not implemented")
}
func (*UnimplementedMsgServiceServer) MsgUpdateParams(ctx context.Context, req *MsgUpdateParamsRequest) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MsgUpdateParams not implemented")
}

func RegisterMsgServiceServer(s grpc1.Server, srv MsgServiceServer) {
	s.RegisterService(&_MsgService_serviceDesc, srv)
}

func _MsgService_MsgCancelSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCancelSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServiceServer).MsgCancelSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sentinel.session.v3.MsgService/MsgCancelSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServiceServer).MsgCancelSession(ctx, req.(*MsgCancelSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MsgService_MsgUpdateSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServiceServer).MsgUpdateSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sentinel.session.v3.MsgService/MsgUpdateSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServiceServer).MsgUpdateSession(ctx, req.(*MsgUpdateSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MsgService_MsgUpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServiceServer).MsgUpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sentinel.session.v3.MsgService/MsgUpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServiceServer).MsgUpdateParams(ctx, req.(*MsgUpdateParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var MsgService_serviceDesc = _MsgService_serviceDesc
var _MsgService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sentinel.session.v3.MsgService",
	HandlerType: (*MsgServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MsgCancelSession",
			Handler:    _MsgService_MsgCancelSession_Handler,
		},
		{
			MethodName: "MsgUpdateSession",
			Handler:    _MsgService_MsgUpdateSession_Handler,
		},
		{
			MethodName: "MsgUpdateParams",
			Handler:    _MsgService_MsgUpdateParams_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sentinel/session/v3/msg.proto",
}

func (m *MsgCancelSessionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelSessionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelSessionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ID != 0 {
		i = encodeVarintMsg(dAtA, i, uint64(m.ID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSessionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSessionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSessionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signature) > 0 {
		i -= len(m.Signature)
		copy(dAtA[i:], m.Signature)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.Signature)))
		i--
		dAtA[i] = 0x32
	}
	n1, err1 := github_com_cosmos_gogoproto_types.StdDurationMarshalTo(m.Duration, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.Duration):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintMsg(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x2a
	{
		size := m.UploadBytes.Size()
		i -= size
		if _, err := m.UploadBytes.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMsg(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	{
		size := m.DownloadBytes.Size()
		i -= size
		if _, err := m.DownloadBytes.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMsg(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.ID != 0 {
		i = encodeVarintMsg(dAtA, i, uint64(m.ID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMsg(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCancelSessionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelSessionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelSessionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSessionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSessionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSessionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintMsg(dAtA []byte, offset int, v uint64) int {
	offset -= sovMsg(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCancelSessionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	if m.ID != 0 {
		n += 1 + sovMsg(uint64(m.ID))
	}
	return n
}

func (m *MsgUpdateSessionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	if m.ID != 0 {
		n += 1 + sovMsg(uint64(m.ID))
	}
	l = m.DownloadBytes.Size()
	n += 1 + l + sovMsg(uint64(l))
	l = m.UploadBytes.Size()
	n += 1 + l + sovMsg(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.Duration)
	n += 1 + l + sovMsg(uint64(l))
	l = len(m.Signature)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	return n
}

func (m *MsgUpdateParamsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovMsg(uint64(l))
	return n
}

func (m *MsgCancelSessionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateSessionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovMsg(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMsg(x uint64) (n int) {
	return sovMsg(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCancelSessionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelSessionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelSessionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSessionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSessionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSessionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DownloadBytes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DownloadBytes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UploadBytes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.UploadBytes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdDurationUnmarshal(&m.Duration, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signature = append(m.Signature[:0], dAtA[iNdEx:postIndex]...)
			if m.Signature == nil {
				m.Signature = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelSessionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelSessionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelSessionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSessionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSessionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSessionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMsg(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMsg
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMsg
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMsg
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMsg        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMsg          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMsg = fmt.Errorf("proto: unexpected end of group")
)
