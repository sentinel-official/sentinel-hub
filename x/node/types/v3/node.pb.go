// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sentinel/node/v3/node.proto

package v3

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	v1 "github.com/sentinel-official/hub/v12/types/v1"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Node struct {
	Address        string     `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	GigabytePrices []v1.Price `protobuf:"bytes,2,rep,name=gigabyte_prices,json=gigabytePrices,proto3" json:"gigabyte_prices"`
	HourlyPrices   []v1.Price `protobuf:"bytes,3,rep,name=hourly_prices,json=hourlyPrices,proto3" json:"hourly_prices"`
	RemoteURL      string     `protobuf:"bytes,4,opt,name=remote_url,json=remoteUrl,proto3" json:"remote_url,omitempty"`
	InactiveAt     time.Time  `protobuf:"bytes,5,opt,name=inactive_at,json=inactiveAt,proto3,stdtime" json:"inactive_at"`
	Status         v1.Status  `protobuf:"varint,6,opt,name=status,proto3,enum=sentinel.types.v1.Status" json:"status,omitempty"`
	StatusAt       time.Time  `protobuf:"bytes,7,opt,name=status_at,json=statusAt,proto3,stdtime" json:"status_at"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_a690fc6104dfd24e, []int{0}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Node.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return m.Size()
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Node)(nil), "sentinel.node.v3.Node")
}

func init() { proto.RegisterFile("sentinel/node/v3/node.proto", fileDescriptor_a690fc6104dfd24e) }

var fileDescriptor_a690fc6104dfd24e = []byte{
	// 414 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xbd, 0x8e, 0xd3, 0x30,
	0x1c, 0x8f, 0x69, 0xe9, 0x5d, 0x5d, 0xee, 0x40, 0x11, 0x43, 0x28, 0xc2, 0xad, 0x98, 0x3a, 0x80,
	0xad, 0x24, 0xbc, 0x40, 0x83, 0x10, 0x0b, 0x42, 0x28, 0x70, 0x0c, 0x2c, 0x55, 0x3e, 0xdc, 0xd4,
	0x52, 0x12, 0x47, 0xb1, 0x13, 0xd1, 0xb7, 0xb8, 0x95, 0x37, 0xe0, 0x51, 0x3a, 0xde, 0xc8, 0x74,
	0x40, 0xfa, 0x22, 0x28, 0x76, 0xdc, 0x05, 0x06, 0x6e, 0x8a, 0xfd, 0xff, 0x7d, 0xfd, 0xf3, 0x93,
	0xe1, 0x53, 0x41, 0x4b, 0xc9, 0x4a, 0x9a, 0x93, 0x92, 0xa7, 0x94, 0xb4, 0xbe, 0xfa, 0xe2, 0xaa,
	0xe6, 0x92, 0xdb, 0x8f, 0x0c, 0x88, 0xd5, 0xb0, 0xf5, 0xe7, 0x8f, 0x33, 0x9e, 0x71, 0x05, 0x92,
	0xfe, 0xa4, 0x79, 0xf3, 0x45, 0xc6, 0x79, 0x96, 0x53, 0xa2, 0x6e, 0x71, 0xb3, 0x25, 0x92, 0x15,
	0x54, 0xc8, 0xa8, 0xa8, 0x06, 0xc2, 0xb3, 0x53, 0x8a, 0xdc, 0x57, 0x54, 0x90, 0xd6, 0x25, 0x55,
	0xcd, 0x92, 0x21, 0x67, 0x8e, 0xfe, 0x86, 0x85, 0x8c, 0x64, 0x23, 0x34, 0xfe, 0xfc, 0xdb, 0x08,
	0x8e, 0xdf, 0xf3, 0x94, 0xda, 0x0e, 0x3c, 0x8b, 0xd2, 0xb4, 0xa6, 0x42, 0x38, 0x60, 0x09, 0x56,
	0xd3, 0xd0, 0x5c, 0xed, 0xb7, 0xf0, 0x61, 0xc6, 0xb2, 0x28, 0xde, 0x4b, 0xba, 0x51, 0xd6, 0xc2,
	0xb9, 0xb7, 0x1c, 0xad, 0x66, 0x9e, 0x83, 0x4f, 0x3f, 0xa1, 0xcc, 0x71, 0xeb, 0xe2, 0x0f, 0x3d,
	0x21, 0x18, 0x1f, 0x6e, 0x17, 0x56, 0x78, 0x69, 0x64, 0x6a, 0x28, 0xec, 0xd7, 0xf0, 0x62, 0xc7,
	0x9b, 0x3a, 0xdf, 0x1b, 0x9b, 0xd1, 0x7f, 0xd9, 0x3c, 0xd0, 0xa2, 0xc1, 0xe4, 0x05, 0x84, 0x35,
	0x2d, 0xb8, 0xa4, 0x9b, 0xa6, 0xce, 0x9d, 0x71, 0xbf, 0x6a, 0x70, 0xd1, 0xdd, 0x2e, 0xa6, 0xa1,
	0x9a, 0x5e, 0x85, 0xef, 0xc2, 0xa9, 0x26, 0x5c, 0xd5, 0xb9, 0xfd, 0x06, 0xce, 0x58, 0x19, 0x25,
	0x92, 0xb5, 0x74, 0x13, 0x49, 0xe7, 0xfe, 0x12, 0xac, 0x66, 0xde, 0x1c, 0xeb, 0x52, 0xb1, 0x29,
	0x15, 0x7f, 0x32, 0xa5, 0x06, 0xe7, 0x7d, 0xe4, 0xf5, 0xcf, 0x05, 0x08, 0xa1, 0x11, 0xae, 0xa5,
	0xed, 0xc2, 0x89, 0x6e, 0xcd, 0x99, 0x2c, 0xc1, 0xea, 0xd2, 0x7b, 0xf2, 0x8f, 0x95, 0x3f, 0x2a,
	0x42, 0x38, 0x10, 0xed, 0x35, 0x9c, 0xea, 0x53, 0x9f, 0x7b, 0x76, 0x87, 0xdc, 0x73, 0x2d, 0x5b,
	0xcb, 0xe0, 0xf3, 0xe1, 0x37, 0xb2, 0xbe, 0x77, 0xc8, 0x3a, 0x74, 0x08, 0xdc, 0x74, 0x08, 0xfc,
	0xea, 0x10, 0xb8, 0x3e, 0x22, 0xeb, 0xe6, 0x88, 0xac, 0x1f, 0x47, 0x64, 0x7d, 0x79, 0x95, 0x31,
	0xb9, 0x6b, 0x62, 0x9c, 0xf0, 0x82, 0x98, 0x8d, 0x5e, 0xf2, 0xed, 0x96, 0x25, 0x2c, 0xca, 0xc9,
	0xae, 0x89, 0x49, 0xeb, 0x7a, 0xe4, 0xab, 0x7e, 0x80, 0xc3, 0x03, 0xf0, 0xe3, 0x89, 0xca, 0xf7,
	0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x82, 0x0a, 0x42, 0x65, 0xa1, 0x02, 0x00, 0x00,
}

func (m *Node) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Node) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Node) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n1, err1 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.StatusAt, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.StatusAt):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintNode(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x3a
	if m.Status != 0 {
		i = encodeVarintNode(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x30
	}
	n2, err2 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.InactiveAt, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.InactiveAt):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintNode(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x2a
	if len(m.RemoteURL) > 0 {
		i -= len(m.RemoteURL)
		copy(dAtA[i:], m.RemoteURL)
		i = encodeVarintNode(dAtA, i, uint64(len(m.RemoteURL)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.HourlyPrices) > 0 {
		for iNdEx := len(m.HourlyPrices) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HourlyPrices[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintNode(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.GigabytePrices) > 0 {
		for iNdEx := len(m.GigabytePrices) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.GigabytePrices[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintNode(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintNode(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintNode(dAtA []byte, offset int, v uint64) int {
	offset -= sovNode(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Node) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovNode(uint64(l))
	}
	if len(m.GigabytePrices) > 0 {
		for _, e := range m.GigabytePrices {
			l = e.Size()
			n += 1 + l + sovNode(uint64(l))
		}
	}
	if len(m.HourlyPrices) > 0 {
		for _, e := range m.HourlyPrices {
			l = e.Size()
			n += 1 + l + sovNode(uint64(l))
		}
	}
	l = len(m.RemoteURL)
	if l > 0 {
		n += 1 + l + sovNode(uint64(l))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.InactiveAt)
	n += 1 + l + sovNode(uint64(l))
	if m.Status != 0 {
		n += 1 + sovNode(uint64(m.Status))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.StatusAt)
	n += 1 + l + sovNode(uint64(l))
	return n
}

func sovNode(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozNode(x uint64) (n int) {
	return sovNode(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Node) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowNode
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Node: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Node: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNode
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNode
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNode
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GigabytePrices", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNode
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthNode
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthNode
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GigabytePrices = append(m.GigabytePrices, v1.Price{})
			if err := m.GigabytePrices[len(m.GigabytePrices)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HourlyPrices", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNode
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthNode
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthNode
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HourlyPrices = append(m.HourlyPrices, v1.Price{})
			if err := m.HourlyPrices[len(m.HourlyPrices)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoteURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNode
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNode
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNode
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemoteURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InactiveAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNode
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthNode
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthNode
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.InactiveAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNode
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= v1.Status(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNode
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthNode
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthNode
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.StatusAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipNode(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthNode
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipNode(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowNode
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowNode
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowNode
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthNode
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupNode
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthNode
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthNode        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowNode          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupNode = fmt.Errorf("proto: unexpected end of group")
)
