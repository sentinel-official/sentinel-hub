// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sentinel/node/v3/session.proto

package v3

import (
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	v1 "github.com/sentinel-official/hub/v12/types/v1"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Session struct {
	ID            uint64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AccAddress    string                `protobuf:"bytes,2,opt,name=acc_address,json=accAddress,proto3" json:"acc_address,omitempty"`
	NodeAddress   string                `protobuf:"bytes,3,opt,name=node_address,json=nodeAddress,proto3" json:"node_address,omitempty"`
	Price         types.Coin            `protobuf:"bytes,4,opt,name=price,proto3" json:"price"`
	Deposit       types.Coin            `protobuf:"bytes,5,opt,name=deposit,proto3" json:"deposit"`
	DownloadBytes cosmossdk_io_math.Int `protobuf:"bytes,6,opt,name=download_bytes,json=downloadBytes,proto3,customtype=cosmossdk.io/math.Int" json:"download_bytes"`
	UploadBytes   cosmossdk_io_math.Int `protobuf:"bytes,7,opt,name=upload_bytes,json=uploadBytes,proto3,customtype=cosmossdk.io/math.Int" json:"upload_bytes"`
	MaxBytes      cosmossdk_io_math.Int `protobuf:"bytes,8,opt,name=max_bytes,json=maxBytes,proto3,customtype=cosmossdk.io/math.Int" json:"max_bytes"`
	Duration      time.Duration         `protobuf:"bytes,9,opt,name=duration,proto3,stdduration" json:"duration"`
	MaxDuration   time.Duration         `protobuf:"bytes,10,opt,name=max_duration,json=maxDuration,proto3,stdduration" json:"max_duration"`
	Status        v1.Status             `protobuf:"varint,11,opt,name=status,proto3,enum=sentinel.types.v1.Status" json:"status,omitempty"`
	StatusAt      time.Time             `protobuf:"bytes,12,opt,name=status_at,json=statusAt,proto3,stdtime" json:"status_at"`
	InactiveAt    time.Time             `protobuf:"bytes,13,opt,name=inactive_at,json=inactiveAt,proto3,stdtime" json:"inactive_at"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_14bb5c1dd44d5aee, []int{0}
}
func (m *Session) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Session.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(m, src)
}
func (m *Session) XXX_Size() int {
	return m.Size()
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Session)(nil), "sentinel.node.v3.Session")
}

func init() { proto.RegisterFile("sentinel/node/v3/session.proto", fileDescriptor_14bb5c1dd44d5aee) }

var fileDescriptor_14bb5c1dd44d5aee = []byte{
	// 546 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x3d, 0x8f, 0xd3, 0x30,
	0x18, 0x4e, 0x4a, 0x3f, 0x9d, 0xde, 0x09, 0x45, 0x80, 0x72, 0x95, 0x48, 0x0a, 0x53, 0x17, 0x6c,
	0xa5, 0x85, 0x01, 0x16, 0x68, 0x28, 0x48, 0xb7, 0xe6, 0x10, 0x03, 0x4b, 0xe5, 0x24, 0x6e, 0x6b,
	0xd1, 0xc4, 0x51, 0xed, 0x84, 0xde, 0xbf, 0xb8, 0x91, 0x9f, 0xc0, 0x4f, 0xe9, 0x78, 0x23, 0x62,
	0x28, 0x5c, 0xfb, 0x47, 0x50, 0xe2, 0x38, 0x42, 0xb0, 0x94, 0xed, 0xf5, 0xfb, 0x3e, 0xcf, 0xf3,
	0x7e, 0x1a, 0xd8, 0x9c, 0x24, 0x82, 0x26, 0x64, 0x8d, 0x12, 0x16, 0x11, 0x94, 0x4f, 0x10, 0x27,
	0x9c, 0x53, 0x96, 0xc0, 0x74, 0xc3, 0x04, 0x33, 0xef, 0xab, 0x38, 0x2c, 0xe2, 0x30, 0x9f, 0x0c,
	0xec, 0x90, 0xf1, 0x98, 0x71, 0x14, 0x60, 0x4e, 0x50, 0xee, 0x06, 0x44, 0x60, 0x17, 0x85, 0x8c,
	0x56, 0x8c, 0xc1, 0x83, 0x25, 0x5b, 0xb2, 0xd2, 0x44, 0x85, 0x55, 0x79, 0xed, 0x25, 0x63, 0xcb,
	0x35, 0x41, 0xe5, 0x2b, 0xc8, 0x16, 0x28, 0xca, 0x36, 0x58, 0xd4, 0x79, 0x06, 0xce, 0xdf, 0x71,
	0x41, 0x63, 0xc2, 0x05, 0x8e, 0x53, 0x25, 0x50, 0x17, 0x2a, 0xae, 0x53, 0xc2, 0x51, 0xee, 0x22,
	0x2e, 0xb0, 0xc8, 0xb8, 0x8c, 0x3f, 0xbd, 0x6b, 0x81, 0xce, 0x95, 0x2c, 0xdd, 0x7c, 0x04, 0x1a,
	0x34, 0xb2, 0xf4, 0xa1, 0x3e, 0x6a, 0x7a, 0xed, 0xc3, 0xde, 0x69, 0x5c, 0xce, 0xfc, 0x06, 0x8d,
	0x4c, 0x07, 0x18, 0x38, 0x0c, 0xe7, 0x38, 0x8a, 0x36, 0x84, 0x73, 0xab, 0x31, 0xd4, 0x47, 0x3d,
	0x1f, 0xe0, 0x30, 0x9c, 0x4a, 0x8f, 0xf9, 0x04, 0xf4, 0x8b, 0x36, 0x6b, 0xc4, 0xbd, 0x12, 0x61,
	0x14, 0x3e, 0x05, 0x79, 0x01, 0x5a, 0xe9, 0x86, 0x86, 0xc4, 0x6a, 0x0e, 0xf5, 0x91, 0x31, 0xbe,
	0x80, 0x72, 0x1c, 0xb0, 0x18, 0x07, 0xac, 0xc6, 0x01, 0xdf, 0x32, 0x9a, 0x78, 0xcd, 0xdd, 0xde,
	0xd1, 0x7c, 0x89, 0x36, 0x5f, 0x82, 0x4e, 0x44, 0x52, 0xc6, 0xa9, 0xb0, 0x5a, 0xa7, 0x11, 0x15,
	0xde, 0x9c, 0x81, 0xf3, 0x88, 0x7d, 0x49, 0xd6, 0x0c, 0x47, 0xf3, 0xe0, 0x5a, 0x10, 0x6e, 0xb5,
	0x8b, 0xb2, 0xbc, 0xc7, 0x05, 0xec, 0xc7, 0xde, 0x79, 0x28, 0x85, 0x78, 0xf4, 0x19, 0x52, 0x86,
	0x62, 0x2c, 0x56, 0xf0, 0x32, 0x11, 0xfe, 0x99, 0x22, 0x79, 0x05, 0xc7, 0x7c, 0x03, 0xfa, 0x59,
	0xfa, 0x87, 0x46, 0xe7, 0x14, 0x0d, 0x43, 0x52, 0xa4, 0xc2, 0x2b, 0xd0, 0x8b, 0xf1, 0xb6, 0xa2,
	0x77, 0x4f, 0xa1, 0x77, 0x63, 0xbc, 0x95, 0xdc, 0xd7, 0xa0, 0xab, 0x16, 0x6e, 0xf5, 0xaa, 0xfe,
	0xe5, 0xc6, 0xa1, 0xda, 0x38, 0x9c, 0x55, 0x00, 0xaf, 0x5b, 0xa8, 0x7e, 0xfd, 0xe9, 0xe8, 0x7e,
	0x4d, 0x32, 0xdf, 0x83, 0x7e, 0x91, 0xbc, 0x16, 0x01, 0xa7, 0x8b, 0x18, 0x31, 0xde, 0x2a, 0xb7,
	0xe9, 0x82, 0xb6, 0x3c, 0x1b, 0xcb, 0x18, 0xea, 0xa3, 0xf3, 0xf1, 0x05, 0xac, 0x0f, 0xbc, 0xbc,
	0x2b, 0x98, 0xbb, 0xf0, 0xaa, 0x04, 0xf8, 0x15, 0xd0, 0x9c, 0x82, 0x9e, 0xb4, 0xe6, 0x58, 0x58,
	0xfd, 0x32, 0xef, 0xe0, 0x9f, 0xbc, 0x1f, 0xd4, 0xb9, 0xca, 0xc4, 0x37, 0x65, 0xf5, 0x92, 0x36,
	0x15, 0xe6, 0x3b, 0x60, 0xd0, 0x04, 0x87, 0x82, 0xe6, 0xa4, 0x10, 0x39, 0xfb, 0x0f, 0x11, 0xa0,
	0x88, 0x53, 0xe1, 0x7d, 0xdc, 0xdd, 0xd9, 0xda, 0xb7, 0x83, 0xad, 0xed, 0x0e, 0xb6, 0x7e, 0x7b,
	0xb0, 0xf5, 0x5f, 0x07, 0x5b, 0xbf, 0x39, 0xda, 0xda, 0xed, 0xd1, 0xd6, 0xbe, 0x1f, 0x6d, 0xed,
	0xd3, 0xf3, 0x25, 0x15, 0xab, 0x2c, 0x80, 0x21, 0x8b, 0x91, 0x6a, 0xec, 0x19, 0x5b, 0x2c, 0x68,
	0x48, 0xf1, 0x1a, 0xad, 0xb2, 0x00, 0xe5, 0xee, 0x18, 0x6d, 0xe5, 0x67, 0xaf, 0x3e, 0xd2, 0x24,
	0x68, 0x97, 0x15, 0x4c, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0xd4, 0xad, 0x93, 0x2c, 0x0d, 0x04,
	0x00, 0x00,
}

func (m *Session) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Session) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Session) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n1, err1 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.InactiveAt, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.InactiveAt):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintSession(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x6a
	n2, err2 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.StatusAt, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.StatusAt):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintSession(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x62
	if m.Status != 0 {
		i = encodeVarintSession(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x58
	}
	n3, err3 := github_com_cosmos_gogoproto_types.StdDurationMarshalTo(m.MaxDuration, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.MaxDuration):])
	if err3 != nil {
		return 0, err3
	}
	i -= n3
	i = encodeVarintSession(dAtA, i, uint64(n3))
	i--
	dAtA[i] = 0x52
	n4, err4 := github_com_cosmos_gogoproto_types.StdDurationMarshalTo(m.Duration, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.Duration):])
	if err4 != nil {
		return 0, err4
	}
	i -= n4
	i = encodeVarintSession(dAtA, i, uint64(n4))
	i--
	dAtA[i] = 0x4a
	{
		size := m.MaxBytes.Size()
		i -= size
		if _, err := m.MaxBytes.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintSession(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x42
	{
		size := m.UploadBytes.Size()
		i -= size
		if _, err := m.UploadBytes.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintSession(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	{
		size := m.DownloadBytes.Size()
		i -= size
		if _, err := m.DownloadBytes.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintSession(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	{
		size, err := m.Deposit.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintSession(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	{
		size, err := m.Price.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintSession(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.NodeAddress) > 0 {
		i -= len(m.NodeAddress)
		copy(dAtA[i:], m.NodeAddress)
		i = encodeVarintSession(dAtA, i, uint64(len(m.NodeAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AccAddress) > 0 {
		i -= len(m.AccAddress)
		copy(dAtA[i:], m.AccAddress)
		i = encodeVarintSession(dAtA, i, uint64(len(m.AccAddress)))
		i--
		dAtA[i] = 0x12
	}
	if m.ID != 0 {
		i = encodeVarintSession(dAtA, i, uint64(m.ID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintSession(dAtA []byte, offset int, v uint64) int {
	offset -= sovSession(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Session) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ID != 0 {
		n += 1 + sovSession(uint64(m.ID))
	}
	l = len(m.AccAddress)
	if l > 0 {
		n += 1 + l + sovSession(uint64(l))
	}
	l = len(m.NodeAddress)
	if l > 0 {
		n += 1 + l + sovSession(uint64(l))
	}
	l = m.Price.Size()
	n += 1 + l + sovSession(uint64(l))
	l = m.Deposit.Size()
	n += 1 + l + sovSession(uint64(l))
	l = m.DownloadBytes.Size()
	n += 1 + l + sovSession(uint64(l))
	l = m.UploadBytes.Size()
	n += 1 + l + sovSession(uint64(l))
	l = m.MaxBytes.Size()
	n += 1 + l + sovSession(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.Duration)
	n += 1 + l + sovSession(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.MaxDuration)
	n += 1 + l + sovSession(uint64(l))
	if m.Status != 0 {
		n += 1 + sovSession(uint64(m.Status))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.StatusAt)
	n += 1 + l + sovSession(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.InactiveAt)
	n += 1 + l + sovSession(uint64(l))
	return n
}

func sovSession(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSession(x uint64) (n int) {
	return sovSession(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Session) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSession
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Session: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Session: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSession
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSession
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSession
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSession
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSession
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSession
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSession
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NodeAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSession
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSession
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSession
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Price.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSession
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSession
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSession
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Deposit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DownloadBytes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSession
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSession
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSession
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DownloadBytes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UploadBytes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSession
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSession
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSession
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.UploadBytes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxBytes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSession
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSession
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSession
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MaxBytes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSession
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSession
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSession
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdDurationUnmarshal(&m.Duration, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxDuration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSession
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSession
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSession
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdDurationUnmarshal(&m.MaxDuration, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSession
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= v1.Status(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSession
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSession
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSession
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.StatusAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InactiveAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSession
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSession
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSession
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.InactiveAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSession(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSession
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSession(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSession
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSession
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSession
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSession
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSession
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSession
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSession        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSession          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSession = fmt.Errorf("proto: unexpected end of group")
)
