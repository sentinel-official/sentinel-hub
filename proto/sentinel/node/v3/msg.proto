syntax = "proto3";
package sentinel.node.v3;

import "gogoproto/gogo.proto";

option go_package = "github.com/sentinel-official/hub/v12/x/node/types/v3";
option (gogoproto.equal_all) = false;
option (gogoproto.goproto_getters_all) = false;

message MsgStartLeaseRequest {
  string from = 1;
  string node_address = 2;
  int64 hours = 3;
  string denom = 4;
}

message MsgRenewLeaseRequest {
  string from = 1;
  uint64 id = 2 [(gogoproto.customname) = "ID"];
  int64 hours = 3;
  string denom = 4;
}

message MsgEndLeaseRequest {
  string from = 1;
  uint64 id = 2 [(gogoproto.customname) = "ID"];
}

message MsgStartSessionRequest {
  string from = 1;
  string node_address = 2;
  int64 gigabytes = 3;
  int64 hours = 4;
  string denom = 5;
}

message MsgStartLeaseResponse {}
message MsgRenewLeaseResponse {}
message MsgEndLeaseResponse {}
message MsgStartSessionResponse {}

service MsgService {
  rpc MsgStartLease(MsgStartLeaseRequest) returns (MsgStartLeaseResponse);
  rpc MsgRenewLease(MsgRenewLeaseRequest) returns (MsgRenewLeaseResponse);
  rpc MsgEndLease(MsgEndLeaseRequest) returns (MsgEndLeaseResponse);
  rpc MsgStartSession(MsgStartSessionRequest) returns (MsgStartSessionResponse);
}
