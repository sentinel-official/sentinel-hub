syntax = "proto3";
package sentinel.plan.v2;

import "gogoproto/gogo.proto";
import "sentinel/types/v1/status.proto";

option go_package = "github.com/sentinel-official/hub/v12/x/plan/types/v2";
option (gogoproto.equal_all) = false;
option (gogoproto.goproto_getters_all) = false;

// EventCreate represents an event for creating an entity.
message EventCreate {
  // Field 1: Address associated with the event.
  string address = 1 [(gogoproto.moretags) = "yaml:\"address\""];

  // Field 2: Identifier associated with the event.
  uint64 id = 2 [
    (gogoproto.customname) = "ID",
    (gogoproto.moretags) = "yaml:\"id\""
  ];
}

// EventUpdateStatus represents an event for updating the status of an entity.
message EventUpdateStatus {
  // Field 1: Status associated with the event.
  sentinel.types.v1.Status status = 1 [(gogoproto.moretags) = "yaml:\"status\""];

  // Field 2: Address associated with the event.
  string address = 2 [(gogoproto.moretags) = "yaml:\"address\""];

  // Field 3: Identifier associated with the event.
  uint64 id = 3 [
    (gogoproto.customname) = "ID",
    (gogoproto.moretags) = "yaml:\"id\""
  ];
}

// EventLinkNode represents an event for linking a node to an entity.
message EventLinkNode {
  // Field 1: Address associated with the event.
  string address = 1 [(gogoproto.moretags) = "yaml:\"address\""];

  // Field 2: Node address associated with the event.
  string node_address = 2 [(gogoproto.moretags) = "yaml:\"node_address\""];

  // Field 3: Identifier associated with the event.
  uint64 id = 3 [
    (gogoproto.customname) = "ID",
    (gogoproto.moretags) = "yaml:\"id\""
  ];
}

// EventUnlinkNode represents an event for unlinking a node from an entity.
message EventUnlinkNode {
  // Field 1: Address associated with the event.
  string address = 1 [(gogoproto.moretags) = "yaml:\"address\""];

  // Field 2: Node address associated with the event.
  string node_address = 2 [(gogoproto.moretags) = "yaml:\"node_address\""];

  // Field 3: Identifier associated with the event.
  uint64 id = 3 [
    (gogoproto.customname) = "ID",
    (gogoproto.moretags) = "yaml:\"id\""
  ];
}

// EventCreateSubscription represents an event for creating a subscription.
message EventCreateSubscription {
  // Field 1: Address associated with the event.
  string address = 1 [(gogoproto.moretags) = "yaml:\"address\""];

  // Field 2: Provider address associated with the event.
  string provider_address = 2 [(gogoproto.moretags) = "yaml:\"provider_address\""];

  // Field 3: Identifier associated with the event.
  uint64 id = 3 [
    (gogoproto.customname) = "ID",
    (gogoproto.moretags) = "yaml:\"id\""
  ];

  // Field 4: Plan ID associated with the event.
  uint64 plan_id = 4 [
    (gogoproto.customname) = "PlanID",
    (gogoproto.moretags) = "yaml:\"plan_id\""
  ];
}
